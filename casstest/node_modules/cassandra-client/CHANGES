Changes with cassandra-client 0.15.1:
- Use a new error type for Client timeouts

Changes with cassandra-client 0.15.0:
- Depend on thrift >= 0.9.1
- avoid double buffer to string conversion by using buffers when reading
  binary fields
- use TFramedTransport instead of TBufferedTransport by default

Changes with cassandra-client 0.14.8:

- Make staleThreshold configurable (#87)
- Make whiskey a dev dependency
- Fix example in README

Changes with cassandra-client 0.14.7:

- Fix connection race. (#75)

Changes with cassandra-client 0.14.6:

- Depend on thrift <= 0.9.0.

Changes with cassandra-client 0.14.5

- Don't call close on self.con inside Connection.close if con is not set. #72

Changes with cassandra-client 0.14.4

- Include columns with empty string value ('') in the result set. #71
  [Sven Krasser]

Changes with cassandra-client 0.14.3

- Pass an error to the Connection.excute callback if column family which is
  returned in the result is missing validator definitions.

Changes with cassandra-client 0.14.2

- Include 'connectionInfo' attribute with every log message which is tied to a
  Cassandra connection. (#66)

Changes with cassandra-client 0.14.1

- Include regenerated Thrift definition files to client works with
  Cassandra 1.2

- Allow user to specify used CQL version by passing 'cql_version' attribute to
  the Connection / PooledConnection constructor. Valid options are '2.0.0' and
  '3.0.0'.

  This option is here to make porting applications to Cassandra 1.2 easier.
  Cassandra 1.2 defaults to CQL version 3 which means you need to set
  'cql_version' to '2.0.0' if you want run your queries in CQL 2 compatibility
  mode.

  Note: Setting CQL version is only available in Cassandra >= 1.1.

Changes with cassandra-client 0.14.0

- Bump required thrift version to 0.7.0

- Log the right timeout when a query takes too long.

Changes with cassandra-client 0.13.0

- Fix a bug when an invalid parameter passed to PooledConnection.execute method
  would cause connection pool to invalidly be exhausted instead of passing error
  directly back to the user.

- Fix a bug with incorrectly waiting for a query timeout instead of imediatelly
  calling 'Connection.execute' callback if an 'error' event was emitted on a
  Thrift connection.

Changes with cassandra-client 0.12.0

- Remove concept of a 'taken' connection and allow the same Thrift connection to
  be used to execute multiple queries at the same time.
  Thrift client supports request multiplexing which means marking connection as
  'taken' when a query is executing is not necessary.

- Rename 'max_query' Connection / PooledConnection option to 'query_timeout'.
  Also decrease default 'query_timeout' from 100 seconds to a more sane value of
  5 seconds.

- Properly propagate 'query_timeout' setting to a ConnectionInPool class inside
  a PooledConnection class.

Changes with cassandra-client in 0.11.0

- Changes to support cassandra 1.1.

  Mainly changes related to using binary strings instead of Buffer objects.
  Regenerated Thrift client.
  Still compatible with Cassandra 1.0.x.
  No CQ3 yet.

Changes with cassandra-client in 0.10.0

- Pass 'metadata' object as a third and last argument to the
  {Connection,PooledConnection}.execute callback.

  Note: This change might break some of the existing code (e.g. if you use
  connection.execute directly in async.waterfall chain) because previously
  execute callback took two arguments and now it takes three.

Changes with cassandra-client in 0.9.6

- Add metadata.connectionInfo attribute to the 'rows' object passed to the
  {Connection,PooledConnection}.execute callback. This object contains host and
  port of the Cassandra host where the query was actually executed.

Changes with cassandra-client in 0.9.5

- fix exception thrown with undefinded query parameters [Simon Gaeremynck]

Changes with cassandra-client in 0.9.4

- support for parmeterized types (patch contributed by Allan Carroll <allanca@gmail.com>)
- log strings instead of buffers.
- Fix potential double callback on connect. [Allan Carroll]

Changes with cassandra-client in 0.9.3:

- Improve serialization and deserialization support for the following types: Number, Date, Boolean.
  [Dan Foody]

Changes with cassandra-client 0.9.2:

- Fix a race condition when pooled connections are closed.

Changes with cassandra-client 0.9.1:

- Emit a 'log' event with 'error' level if an error happens when connecting to
  Cassandra.

Changes with cassandra-client 0.9.0

- Change PooledConnection to retry a query if a TimedOutException is returned.

- Change Connection and PooledConnection 'log' event arguments - now it takes the
  following arguments:

  - level - log level
  - message - string log message which is always present (previously this
    argument could be either string or an object)
  - obj - optional object which extra message attributes (e.g. connectionInfo,
    query, etc.)

  Note: This change is backward incompatible - previously 'obj' argument wasn't
  passed to the 'log' event

Changes with cassandra-client 0.8.2

- id connections.
- introduce options.max_query to allow separate and configurable query timeouts.
- emit error event on thrift error.
- long query watch logs a trace when any query takes more than 10s.
- pooled connections need to quietly tear down transport connections when being reconnected.
- fix recoverable error logic in PooledConnection.execute.
- Make PooledConnection.execute() re-execution calls explicit (saw some strange inheritance problems when execute()
  was overloaded with different parameters).

Changes with cassandra-client 0.8.1

- fix callback problem with CP.shutdown

Changes with cassandra-client 0.8.0

- Put drain back. (http://code.google.com/a/apache-extras.org/p/cassandra-node/issues/detail?id=32)

- Allow blob updates (http://code.google.com/a/apache-extras.org/p/cassandra-node/issues/detail?id=28)

- Remove logmagic dependency, see README.md for how to capture logging events.
  (http://code.google.com/a/apache-extras.org/p/cassandra-node/issues/detail?id=16)

Changes with cassandra-client 0.7.1

- Swap out generic-pool with homegrown solution (issue 15).

- Add more cassandra types to the decoder [Christoph Tavan]

Changes with cassandra-client 0.6.2:

- Fix scope leaks.

- Replace uuid-js with node-uuid library and add a new UUID type.
  [Christoph Tavan]

Changes with cassandra-client 0.6.1:

- Attach 'connectionInfo' object to the error object which is passed to the
  callbacks.

Changes with cassandra-client 0.6.0:

- Set a timeout for login, learn and use steps. Defaults to 1000ms, 2000ms and
  1000ms respectively.

- Set a timeout for connecting to the cassandra server. Default timeout
  is 4000 ms, but a user can specify custom one by passing 'timeout'
  option to the PooledConnection / Connection constructor.

- Use a different route for logging CQL queries
  (node-cassandra-client.driver.cql).

- Add 'log_time' option and log query execution time if this option is true.
  Timing is logged to 'node-cassandra-client.driver.timing' route.
